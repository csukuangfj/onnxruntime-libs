name: windows-x86

on:
  push:
    branches:
      - fix-ios2
    paths:
      - '.github/workflows/windows-x86.yaml'

  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/windows-x86.yaml'

  workflow_dispatch:
    inputs:
      version:
        description: "Version information (e.g., 1.19.0)"
        required: true

permissions:
  contents: write

env:
  ONNXRUNTIME_VERSION:
    |- # Enter release tag name or version name in workflow_dispatch. Appropriate version if not specified
    ${{ github.event.release.tag_name || github.event.inputs.version || '1.19.0' }}

jobs:
  windows_x86_static:
    if: false
    name: Build onnxruntime static lib for Windows x86
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - name: Cache build result for ${{ env.ONNXRUNTIME_VERSION }}
        id: cache-build-result
        uses: actions/cache@v2
        with:
          path: onnxruntime-win-x86-static-${{ env.ONNXRUNTIME_VERSION }}
          key: onnxruntime-win-x86-static-${{ env.ONNXRUNTIME_VERSION }}-cache-v1

      - name: Checkout v${{ env.ONNXRUNTIME_VERSION }}
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: microsoft/onnxruntime
          submodules: true
          ref: v${{ env.ONNXRUNTIME_VERSION }}

      - name: Install dependencies on Windows
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          python3 -m pip install cmake
          cmake --version
          cmake --help

      - name: Build onnxruntime ${{ env.ONNXRUNTIME_VERSION }} for Win32
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          build_dir=./build/windows_x86_static
          python3 ./tools/ci_build/build.py \
            --build_dir $build_dir \
            --config Release \
            --parallel \
            --enable_msvc_static_runtime \
            --cmake_generator "Visual Studio 17 2022" \
            --skip_tests \
            --update \
            --build \
            --x86
            # --cmake_extra_defines onnxruntime_BUILD_UNIT_TESTS=OFF \
            # --cmake_extra_defines onnxruntime_BUILD_SHARED_LIB=OFF

      - name: Copy results
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          build_dir=./build/windows_x86_static
          version=${{ env.ONNXRUNTIME_VERSION }}
          dst_dir=onnxruntime-win-x86-static-$version

          mkdir -p $dst_dir
          mkdir -p $dst_dir/lib

          echo "copy libs"

          find $build_dir/ -name "*.lib"

          cp $build_dir/Release/_deps/abseil_cpp-build/absl/base/Release/absl_base.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/hash/Release/absl_city.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/hash/Release/absl_hash.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/hash/Release/absl_low_level_hash.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/container/Release/absl_raw_hash_set.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/base/Release/absl_raw_logging_internal.lib $dst_dir/lib
          cp $build_dir/Release/_deps/abseil_cpp-build/absl/base/Release/absl_throw_delegate.lib $dst_dir/lib
          cp $build_dir/Release/_deps/pytorch_cpuinfo-build/deps/clog/Release/clog.lib $dst_dir/lib
          cp $build_dir/Release/_deps/pytorch_cpuinfo-build/Release/cpuinfo.lib $dst_dir/lib
          cp $build_dir/Release/_deps/flatbuffers-build/Release/flatbuffers.lib $dst_dir/lib
          cp $build_dir/Release/_deps/onnx-build/Release/onnx.lib $dst_dir/lib
          cp $build_dir/Release/_deps/onnx-build/Release/onnx_proto.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_common.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_flatbuffers.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_framework.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_graph.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_mlas.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_optimizer.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_providers.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_session.lib $dst_dir/lib
          cp $build_dir/Release/Release/onnxruntime_util.lib $dst_dir/lib
          cp $build_dir/Release/_deps/re2-build/Release/re2.lib $dst_dir/lib
          cp $build_dir/Release/_deps/protobuf-build/Release/libprotobuf-lite.lib $dst_dir/lib

          echo "copy headers"

          mkdir $dst_dir/include

          cp ./include/onnxruntime/core/providers/cpu/cpu_provider_factory.h $dst_dir/include/
          cp ./include/onnxruntime/core/session/onnxruntime_c_api.h $dst_dir/include
          cp ./include/onnxruntime/core/session/onnxruntime_cxx_api.h $dst_dir/include
          cp ./include/onnxruntime/core/session/onnxruntime_cxx_inline.h $dst_dir/include
          cp ./include/onnxruntime/core/session/onnxruntime_run_options_config_keys.h $dst_dir/include
          cp ./include/onnxruntime/core/session/onnxruntime_session_options_config_keys.h $dst_dir/include
          cp ./include/onnxruntime/core/framework/provider_options.h $dst_dir/include
          cp ./include/onnxruntime/core/providers/tensorrt/tensorrt_provider_factory.h $dst_dir/include

          cp ./include/onnxruntime/core/session/onnxruntime_float16.h $dst_dir/include

      - name: Upload artifact
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: onnxruntime-win-x86-static-${{ env.ONNXRUNTIME_VERSION }}
          path: onnxruntime-win-x86-static-${{ env.ONNXRUNTIME_VERSION }}

      # https://huggingface.co/docs/hub/spaces-github-actions
      - name: Publish to huggingface (onnxruntime-libs)
        shell: bash
        if: github.repository_owner == 'csukuangfj' && steps.cache-build-result.outputs.cache-hit != 'true'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          version=${{ env.ONNXRUNTIME_VERSION }}
          dst_dir=onnxruntime-win-x86-static-$version

          tar cjvf $dst_dir.tar.bz2 $dst_dir

          ls -lh

          git config --global user.email "csukuangfj@gmail.com"
          git config --global user.name "Fangjun Kuang"

          export GIT_CLONE_PROTECTION_ACTIVE=false
          GIT_LFS_SKIP_SMUDGE=1 git clone https://huggingface.co/csukuangfj/onnxruntime-libs huggingface

          cd huggingface
          git lfs pull
          cp -v ../$dst_dir.tar.bz2 ./
          git status
          git lfs track "*.bz2"

          git add .

          git commit -m "upload $dst_dir.tar.bz2"
          git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/onnxruntime-libs main
          cd ..
          rm -rf huggingface
